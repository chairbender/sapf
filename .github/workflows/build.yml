name: Compile

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main" ]
    
jobs:
  msys2-clang64:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'  # This will initialize and update all submodules
      - uses: msys2/setup-msys2@v2
        with:
          msystem: CLANG64
          update: true
          install: >-
            base-devel 
            mingw-w64-clang-x86_64-toolchain
            mingw-w64-clang-x86_64-meson
            mingw-w64-clang-x86_64-fftw
            mingw-w64-clang-x86_64-libsndfile
            mingw-w64-clang-x86_64-pkgconf
            mingw-w64-clang-x86_64-rtaudio
            mingw-w64-clang-x86_64-readline
            mingw-w64-clang-x86_64-xsimd
            mingw-w64-clang-x86_64-ca-certificates
      - name: CI-Build
        run: |
          meson setup --buildtype release build
          meson test --verbose -C build
          meson compile sapf_x86_64_v3 -C build
      - name: Save Build Log Artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: meson-build-log-${{ runner.os }}.txt
          path: build/meson-logs/meson-log.tx
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'  # This will initialize and update all submodules

    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      run: .github/scripts/install-debian-deps.sh

    - name: Install macOS Dependencies
      if: runner.os == 'macOS'
      run: .github/scripts/install-macos-deps.sh

    - name: Setup Linux
      if: runner.os == 'Linux'
      run: meson setup --buildtype release build

    - name: Setup macOS
      if: runner.os == 'macOS'
      run: meson setup --buildtype release -Daccelerate=true 
        -Daudiotoolbox=true -Dapple_lock=true -Dcarbon=true 
        -Dcocoa=true -Dcorefoundation=true -Dcoremidi=true 
        -Dmach_time=true -Ddispatch=true -Dmanta=false build

    - name: Test
      run: meson test --verbose -C build

    - name: Compile M1
      if: runner.os == 'macOS'
      run: meson compile sapf_arm_m1 -C build

    - name: Compile Linux x86
      if: runner.os != 'macOS'
      run: meson compile sapf_x86_64_v3 -C build

    - name: Save Build Log Artifact
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: meson-build-log-${{ runner.os }}.txt
        path: build/meson-logs/meson-log.txt
